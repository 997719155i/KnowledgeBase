1、 LISTEN:TCP正等待从对端TCP节点发来的连接请求

2、 SYN_SENT:TCP发送一个SYN报文，代表应用程序执行了一个主动打开的操作，并等待对端回应以此完成连接的建立

3、 SYN_RECV：之前处在LISTEN状态的TCP节点收到了对端发送的SYN报文，并已经通过发送SYN/ACK报文做出了相应（即，这个TCP报文同时设置了SYN和ACK位），正等到对端TCP节点发送一个ACK以此完成连接的建立，进入ESTABLISHED

4、 ESTABLISHED:与对端TCP节点间的连接建立完成。数据报文此时可以再两个TCP节点间双向交换

5、 FIN_WAIT1：应用程序关闭了连接。TCP节点发送一个FIN报文到对端，以此终止本段的连接，并等待对端发来的ACK。这个状态以及接下来的三种状态都与应用程序执行主动关闭有关――也就是说，首先关闭本段连接的应用程序

6、 FIN_WAIT2：之前处在FIN_WAIT1状态的TCP节点现在已经收到了对端TCP节点发来的ACK（半关闭状态）

7、 CLOSING：之前处在FIN_WAIT1状态的TCP节点正在等待对端发送ACK，但却收到了FIN。这表示对端也正在尝试执行一个主动关闭。（换句话说，这两个TCP节点几乎在同一时刻发送了FIN报文。即同时关闭）

8、 TIME_WAIT：完成主动关闭后，TCP节点接收到了FIN报文。这表示对端执行了一个被动关闭。此时这个TCP节点将在TIME_WAIT状态中等待一段固定的时间，这是为了确保TCP连接能够可靠的终止，同时为了确保任何老的重复报文在重新建立同样的连接之前在网络中超时小时。当这个固定的时间段超时后，连接就关闭了，相关的内核资源得到释放。

9、 CLOSE_WAIT：TCP节点从对端收到FIN报文后将处在CLOSE_WAIT状态。该状态以及接下来的一个状态都同应用程序执行的被动关闭有关，也就是第二个执行关闭操作的应用。

10、LAST_ACK：应用程序执行被动关闭，而之前处于CLOSE_WAIT状态的TCO节点发送一个FIN报文给对端，并等待对端的确认。当收到对端发来的确认ACK报文时，连接关闭，相关的内核资源都会得到释放。

11、LCLOSED：关闭状态

















